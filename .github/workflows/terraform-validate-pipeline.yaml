name: Validate Terraform on Push

on:
  workflow_call:
    inputs:
      dirs:
        description: "JSON array string of directories to check. If empty, detect changes."
        required: false
        type: string
        default: ''

    secrets:
      aws-role-to-assume:
        description: AWS Role to assume. Required for OIDC.
        required: false

      aws-region:
        description: AWS Region (for backend and provider)
        required: false

      aws-access-key-id:
        description: AWS Access Key ID. Provide this key if you want to assume a role using access keys rather than a web identity token.
        required: false

      aws-secret-access-key:
        description: AWS Secret Access Key. Required if aws-access-key-id is provided.
        required: false

      modules-private-keys:
        description: AWS Region (for backend and provider)
        required: false

permissions:
  id-token: write
  contents: read

jobs:
  set-working-directory-values:
    runs-on: ubuntu-latest
    steps:
      - name: Use input directories
        if: ${{ inputs.dirs != '' }}
        run: |
          echo "Using input directories: ${{ inputs.dirs }}"
          echo "dirs=${{ inputs.dirs }}" >> $GITHUB_OUTPUT

      - name: Detect changed directories (fallback)
        if: ${{ inputs.dirs == '' }}
        uses: luiz-patire-vigil/actions-test/.github/actions/detect-terraform-changes@main

  validate:
    runs-on: ubuntu-latest
    needs: set-working-directory-values
    strategy:
      matrix:
        working-directory: ${{ fromJson(needs.set-working-directory-values.outputs.dirs) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: luiz-patire-vigil/actions-test/.github/actions/terraform-init@main
        with:
          working-directory: ${{ matrix.working-directory }}
          aws-role-to-assume: ${{ secrets.aws-role-to-assume || null}}
          aws-access-key-id: ${{ secrets.aws-access-key-id || null}}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key || null}}
          aws-region: ${{ secrets.aws-region }}
          modules-private-keys : ${{ secrets.modules-private-keys }}

      - uses: luiz-patire-vigil/actions-test/.github/actions/terraform-plan@main
        with:
          working-directory: ${{ matrix.working-directory }}


# .github/workflows/terraform-check.yml



jobs:
  prepare-dirs:
    runs-on: ubuntu-latest

    outputs:
      directories: ${{ steps.setdirs.outputs.directories }}

    env:
      TARGET_DIRS: ${{ inputs.dirs || '' }}

    steps:
    - name: Determine directories to check
      id: inputdirs
      run: |
        if [ -z "${TARGET_DIRS}" ]; then
          echo "No input directories provided."
          echo "run_detect_changes=true" >> $GITHUB_OUTPUT
        else
          echo "Input directories provided: ${TARGET_DIRS}"
          echo "run_detect_changes=false" >> $GITHUB_OUTPUT

          IFS=',' read -ra DIRS <<< "$TARGET_DIRS"
          dirs_json=$(printf '%s\n' "${DIRS[@]}" | jq -R . | jq -s .)
          echo "directories=$dirs_json" >> $GITHUB_OUTPUT
        fi

    - name: Detect changed directories (fallback)
      if: steps.inputdirs.outputs.run_detect_changes == 'true'
      id: detect
      uses: your-org/detect-changes@v1
      # add inputs here if needed

    - name: Set final directories output
      id: setdirs
      run: |
        if [ "${{ steps.inputdirs.outputs.run_detect_changes }}" == "true" ]; then
          echo "Using directories from detect-changes output"
          echo "directories=${{ steps.detect.outputs.dirs }}" >> $GITHUB_OUTPUT
        else
          echo "Using input directories"
          echo "directories=${{ steps.inputdirs.outputs.directories }}" >> $GITHUB_OUTPUT
        fi

